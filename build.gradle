buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
    }
}

plugins {
    // id "net.minecraftforge.gradle.forge" version "2.0.2"
    id "com.matthewprenger.cursegradle" version "1.0.3"
    id "maven-publish"
}

apply plugin: "net.minecraftforge.gradle.forge"

repositories {
    maven {
        name = "ilexiconn"
        url = "http://maven.ilexiconn.net/"
    }
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

dependencies {
    compile "net.ilexiconn:llibrary:${config.llibrary_version}-${config.minecraft_version}:dev"
}

version = config.mod_version
group = config.mod_group
archivesBaseName = config.mod_name

minecraft {
    version = config.minecraft_version + "-" + config.forge_version + "-1.8.8" //temp, because it's a non-master branch
    runDir = "run"

    replace "@VERSION@", config.mod_version
    replace "@MC_VERSION@", config.minecraft_version
    replace "@LLIBRARY_VERSION@", config.llibrary_version

    mappings = config.minecraft_mappings
}

version = "${config.minecraft_version}-${config.mod_version}"

processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", project.config.minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        
        expand "version":project.version, "mc_version":project.config.minecraft_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

def commonManifest = {
    attributes "FMLCorePlugin": "org.agecraft.extendedmetadata.asm.EMCorePlugin"
}

jar {
    manifest commonManifest
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = "javadoc"
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = "dev"
    manifest commonManifest
}

build.dependsOn sourceJar, javadocJar, devJar

artifacts {
    archives devJar, sourceJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId config.mod_group
            artifactId config.mod_name
            version project.version

            from components.java

            artifact devJar {
                classifier "dev"
            }

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
             asNode().appendNode("description", "A Forge core mod that increases the block ID and metadata limit")
             asNode().appendNode("url", "https://github.com/AgeCraft/ExtendedMetadata")
            }
        }
    }
    repositories {
        maven {
            credentials {
                username System.getenv("MAVEN_USERNAME") ?: ""
                password System.getenv("MAVEN_PASSWORD") ?: ""
            }
            url System.getenv("MAVEN_REPO") ?: ""
        }
    }
}

import groovy.json.JsonSlurper
curseforge {
    def url = "https://github.com/AgeCraft/ExtendedMetadata/raw/1.8.8/versions.json".toURL()
    def versions = new JsonSlurper().parseText url.text

    def type = "release"
    def latestVersion = ""
    versions.versions.each {v, changelog -> latestVersion = v}
    if (versions.beta && versions.beta == latestVersion) {
        type = "beta"
    } else if (versions.alpha && versions.alpha == latestVersion) {
        type = "alpha"
    }

    apiKey = System.getenv("CURSEFORGE_KEY") ?: "noid"
    project {
        id = System.getenv("CURSEFORGE_PROJECT") ?: "noid"

        releaseType = type
        changelog = "* " + versions.versions[versions.getAt(type)].join("\n* ")
        changelogType = "markdown"

        addGameVersion config.minecraft_version

        relations {
            requiredLibrary "llibrary"
        }

        mainArtifact(jar) {
            displayName = config.mod_name + " " + config.mod_version + " (MC " + config.minecraft_version + ")"
        }

        addArtifact(devJar) {
            displayName = config.mod_name + " " + config.mod_version + " Development (MC " + config.minecraft_version + ")"
        }

        addArtifact(sourceJar) {
            displayName = config.mod_name + " " + config.mod_version + " Sources (MC " + config.minecraft_version + ")"
        }

        addArtifact(javadocJar) {
            displayName = config.mod_name + " " + config.mod_version + " Javadoc (MC " + config.minecraft_version + ")"
        }
    }
}
